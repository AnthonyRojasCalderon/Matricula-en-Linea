//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Servicios.WCServicios {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCServicios.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerCorreoUsuario", ReplyAction="http://tempuri.org/IService1/ObtenerCorreoUsuarioResponse")]
        string ObtenerCorreoUsuario(Entidades.Usuarios P_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerCorreoUsuario", ReplyAction="http://tempuri.org/IService1/ObtenerCorreoUsuarioResponse")]
        System.Threading.Tasks.Task<string> ObtenerCorreoUsuarioAsync(Entidades.Usuarios P_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CambioContrasena", ReplyAction="http://tempuri.org/IService1/CambioContrasenaResponse")]
        int CambioContrasena(Entidades.Usuarios P_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CambioContrasena", ReplyAction="http://tempuri.org/IService1/CambioContrasenaResponse")]
        System.Threading.Tasks.Task<int> CambioContrasenaAsync(Entidades.Usuarios P_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EnvioCorreo", ReplyAction="http://tempuri.org/IService1/EnvioCorreoResponse")]
        bool EnvioCorreo(Entidades.Correo P_Correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EnvioCorreo", ReplyAction="http://tempuri.org/IService1/EnvioCorreoResponse")]
        System.Threading.Tasks.Task<bool> EnvioCorreoAsync(Entidades.Correo P_Correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerEstadoClave", ReplyAction="http://tempuri.org/IService1/ObtenerEstadoClaveResponse")]
        int ObtenerEstadoClave(Entidades.Usuarios P_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerEstadoClave", ReplyAction="http://tempuri.org/IService1/ObtenerEstadoClaveResponse")]
        System.Threading.Tasks.Task<int> ObtenerEstadoClaveAsync(Entidades.Usuarios P_Usuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Servicios.WCServicios.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Servicios.WCServicios.IService1>, Servicios.WCServicios.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ObtenerCorreoUsuario(Entidades.Usuarios P_Usuario) {
            return base.Channel.ObtenerCorreoUsuario(P_Usuario);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCorreoUsuarioAsync(Entidades.Usuarios P_Usuario) {
            return base.Channel.ObtenerCorreoUsuarioAsync(P_Usuario);
        }
        
        public int CambioContrasena(Entidades.Usuarios P_Usuario) {
            return base.Channel.CambioContrasena(P_Usuario);
        }
        
        public System.Threading.Tasks.Task<int> CambioContrasenaAsync(Entidades.Usuarios P_Usuario) {
            return base.Channel.CambioContrasenaAsync(P_Usuario);
        }
        
        public bool EnvioCorreo(Entidades.Correo P_Correo) {
            return base.Channel.EnvioCorreo(P_Correo);
        }
        
        public System.Threading.Tasks.Task<bool> EnvioCorreoAsync(Entidades.Correo P_Correo) {
            return base.Channel.EnvioCorreoAsync(P_Correo);
        }
        
        public int ObtenerEstadoClave(Entidades.Usuarios P_Usuario) {
            return base.Channel.ObtenerEstadoClave(P_Usuario);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerEstadoClaveAsync(Entidades.Usuarios P_Usuario) {
            return base.Channel.ObtenerEstadoClaveAsync(P_Usuario);
        }
    }
}
